# POINTERS - COWER IN FEAR

## 5.1 ( Memory and Variables )

To make memory easy to cope with, each byte of memory is identified by an integer. 
These integers increase sequentially as you move up through memory. 
You can think of it as a bunch of numbered boxes, where each box holds a byte of data.
The number that represents each box is called its address.

Not all data types use just a byte, an int is often four bytes, as is a float, but it really depends on the system. 
You can use the sizeof operator to determine how many bytes of memory a certain type uses.

So, a pointer is a variable that holds an address.

This means that all these things mean the same thing, i.e. a number that represents a point in memory:

Index into memory (if you’re thinking of memory like a big array)
Address
Location

Consider;
You can have a house with certain qualities, yard, metal roof, solar, etc. 
Or you could have the address of that house. 
The address isn’t the same as the house itself. 
One’s a full-blown house, and the other is just a few lines of text. 
But the address of the house is a pointer to that house. 
It’s not the house itself, but it tells you where to find it.

It’s not the data variable itself, but, like with a house address, it tells us where to find it.


## 5.2 ( Pointer Types )